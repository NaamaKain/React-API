{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1\\\\Desktop\\\\new react\\\\src\\\\components\\\\Main.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link, Outlet } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main() {\n  _s();\n\n  const [text, setText] = useState('');\n  const [users, setUsers] = useState([]);\n  const [filteredUsers, setFilteredUsers] = useState([]);\n  const [columns, setcolumns] = useState([]);\n  const [rows, setrows] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      const url = 'https://jsonplaceholder.typicode.com/users';\n      const response = await fetch(url);\n      const data = await response.json();\n      setUsers(data);\n      setFilteredUsers(data); // Initialize filteredUsers with all users\n\n      let rowsArr = [];\n      data.map(user => {\n        let name = user.name;\n        let email = user.email;\n        let Cname = user.company.name;\n        rowsArr.push({\n          name,\n          email,\n          company\n        });\n      });\n      setrows(rowsArr);\n    }\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const filtered = users.filter(user => user.name.includes(text) || user.email.includes(text)); //filter the post according to the search box\n\n    setFilteredUsers(filtered);\n  }, [users, text]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"search\",\n      onChange: event => setText(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"company name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredUsers.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.company.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/${user.id}/Posts`,\n              children: \"show posts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 6\n  }, this);\n}\n\n_s(Main, \"1nQMoVdSegXkGV0PG2ducbfQgr0=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/1/Desktop/new react/src/components/Main.jsx"],"names":["React","Link","Outlet","useEffect","useState","useNavigate","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Main","text","setText","users","setUsers","filteredUsers","setFilteredUsers","columns","setcolumns","rows","setrows","fetchData","url","response","fetch","data","json","rowsArr","map","user","name","email","Cname","company","push","filtered","filter","includes","event","target","value","id"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport { Link ,Outlet} from 'react-router-dom';\r\nimport {useEffect, useState } from 'react';\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\n\r\n\r\nfunction Main() {\r\n  const [text, setText] = useState('');\r\n  const [users, setUsers] = useState([]);\r\n  const [filteredUsers, setFilteredUsers] = useState([]);\r\n  const[columns,setcolumns] = useState([]); \r\n  const[rows,setrows] = useState([]); \r\n\r\n\r\n    useEffect(() => {\r\n      async function fetchData() {\r\n        const url = 'https://jsonplaceholder.typicode.com/users';\r\n        const response = await fetch(url);\r\n        const data = await response.json();\r\n        setUsers(data);\r\n        setFilteredUsers(data); // Initialize filteredUsers with all users\r\n  let rowsArr=[];\r\n        data.map(user=>\r\n      {\r\n      let name=user.name;\r\n      let email=user.email;\r\n      let Cname=user.company.name;\r\n     rowsArr.push({name,email,company})\r\n     }\r\n        )\r\n        setrows(rowsArr)\r\n      }\r\n  \r\n      fetchData();\r\n    }, []);\r\n  \r\n    useEffect(() => {\r\n      const filtered = users.filter(user =>\r\n        user.name.includes(text) || user.email.includes(text)\r\n      );//filter the post according to the search box\r\n      setFilteredUsers(filtered);\r\n    }, [users, text]);\r\n    return (\r\n     <div className=\"body\">\r\n                <h1>users</h1>\r\n                <input\r\n        type=\"text\"\r\n        placeholder=\"search\"\r\n        onChange={event => setText(event.target.value)}\r\n      />\r\n                <table>\r\n                <thead>\r\n    <tr>\r\n      <th>name</th>\r\n      <th>email</th>\r\n      <th>company name</th>\r\n      <th>posts</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n  {filteredUsers.map(user => (\r\n          <tr key={user.id}>\r\n            <td>{user.name}</td>\r\n            <td>{user.email}</td>\r\n            <td>{user.company.name}</td>\r\n            <td>\r\n              <Link to={`/${user.id}/Posts`}>show posts</Link>\r\n            </td>\r\n          </tr>\r\n        ))}\r\n  </tbody>\r\n                  </table>\r\n            </div>\r\n\r\n    );\r\n}\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}