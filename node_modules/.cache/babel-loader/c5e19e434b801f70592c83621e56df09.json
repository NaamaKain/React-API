{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1\\\\Desktop\\\\new react\\\\src\\\\components\\\\Main.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link, Outlet } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main() {\n  _s();\n\n  let [text, setText] = useState('');\n  let [users, setUsers] = useState([]);\n  let [userID, setUserId] = useState();\n\n  function showPosts(userId) {\n    setUserId(userId);\n  }\n\n  useEffect(() => {\n    async function getFetch() {\n      let url = `https://jsonplaceholder.typicode.com/users`;\n      let response = await fetch(url);\n      let a = await response.json();\n      setUsers(a);\n      setUserId('1');\n    }\n\n    getFetch();\n    let sortUsers = users;\n    console.log(text);\n\n    const filteredUsers = (sortUsers, text) => sortUsers.filter(user => {\n      return user.name.startsWith(text) || user.name.startsWith(text);\n    });\n\n    let result = filteredUsers(users, text);\n    console.log(result, \"result\");\n    setUsers(result);\n    console.log(users, \"users\");\n  }, [text]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\u05D7\\u05D9\\u05E4\\u05D5\\u05E9\",\n      onChange: event => setText(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"company name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map(user => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.company.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"  \", /*#__PURE__*/_jsxDEV(Link, {\n                to: `/${user.id}/Posts`,\n                children: \"show posts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 11\n            }, this)]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 9\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 6\n  }, this);\n}\n\n_s(Main, \"3slzwxrkwoHhKsva6+yb1e73/uw=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/1/Desktop/new react/src/components/Main.jsx"],"names":["React","Link","Outlet","useEffect","useState","useNavigate","Main","text","setText","users","setUsers","userID","setUserId","showPosts","userId","getFetch","url","response","fetch","a","json","sortUsers","console","log","filteredUsers","filter","user","name","startsWith","result","event","target","value","map","email","company","id"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport { Link ,Outlet} from 'react-router-dom';\r\nimport {useEffect, useState } from 'react';\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\n\r\nfunction Main() {\r\n  let [text, setText] = useState('');\r\n    let [users, setUsers] = useState([]);\r\n    let [userID, setUserId] = useState();\r\n    function showPosts(userId){\r\n      setUserId(userId);\r\n    }\r\n\r\n    useEffect(\r\n        () => {\r\n          async function getFetch(){\r\n            let url = `https://jsonplaceholder.typicode.com/users`;\r\n            let response=await fetch(url);\r\n            let a =await response.json();\r\n            setUsers(a);\r\n            setUserId('1');\r\n        }  \r\n        getFetch();\r\n        let sortUsers = users;\r\n        console.log(text);\r\n        const filteredUsers =(sortUsers,text) => sortUsers.filter(user => {\r\n         return user.name.startsWith(text) || user.name.startsWith(text);\r\n        });\r\n        let result = filteredUsers(users,text)\r\n        console.log(result,\"result\")\r\n        setUsers(result);\r\n        console.log(users,\"users\")\r\n        }, [text]\r\n      );\r\n    return (\r\n     <div className=\"body\">\r\n                <h1>users</h1>\r\n                <input\r\n        type=\"text\"\r\n        placeholder=\"חיפוש\"\r\n        onChange={event => setText(event.target.value)}\r\n      />\r\n                <table>\r\n                <thead>\r\n    <tr>\r\n      <th>name</th>\r\n      <th>email</th>\r\n      <th>company name</th>\r\n      <th>posts</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    {users.map(user => {\r\n      return (\r\n        <tr key={user.id}>\r\n          <td>{ user.name }</td>\r\n          <td>{ user.email }</td>\r\n          <td>{ user.company.name }</td>\r\n          <td>  <Link to={`/${user.id}/Posts`} >show posts</Link></td>\r\n        </tr>\r\n      );\r\n    })}\r\n  </tbody>\r\n                  </table>\r\n\r\n            \r\n       \r\n            </div>\r\n\r\n    );\r\n}\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}