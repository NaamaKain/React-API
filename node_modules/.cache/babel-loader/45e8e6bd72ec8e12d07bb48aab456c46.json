{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1\\\\Desktop\\\\new react\\\\src\\\\components\\\\Posts.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useParams } from 'react-router';\nimport { PoweroffOutlined } from '@ant-design/icons';\nimport { Button, Flex } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Posts(_ref) {\n  _s();\n\n  let {\n    getFetchPosts,\n    postArr,\n    isLoading\n  } = _ref;\n  let [posts, setPosts] = useState([]);\n  le;\n  const params = useParams();\n  const [loadings, setLoadings] = useState([]);\n\n  const enterLoading = index => {\n    setLoadings(prevLoadings => {\n      const newLoadings = [...prevLoadings];\n      newLoadings[index] = true;\n      return newLoadings;\n    });\n    setTimeout(() => {\n      setLoadings(prevLoadings => {\n        const newLoadings = [...prevLoadings];\n        newLoadings[index] = false;\n        return newLoadings;\n      });\n    }, 6000);\n  };\n\n  useEffect(() => {\n    let postsArray = getFetchPosts(params.userID); //take the posts from app, and return to screen\n\n    setPosts(postsArray);\n  }, [params.userID, posts, isLoading]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"h1\",\n      children: [params.userName, \"'s Posts\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      loading: true,\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid-container\",\n      children: postArr.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePost\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Posts, \"pEkI/s+qXEF/r5PrYk1ReiYDr0U=\", false, function () {\n  return [useParams];\n});\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["C:/Users/1/Desktop/new react/src/components/Posts.jsx"],"names":["React","useEffect","useState","Link","useParams","PoweroffOutlined","Button","Flex","Posts","getFetchPosts","postArr","isLoading","posts","setPosts","le","params","loadings","setLoadings","enterLoading","index","prevLoadings","newLoadings","setTimeout","postsArray","userID","userName","map","post","title","body","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,gBAAT,QAAiC,mBAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,MAA7B;;;AAEA,SAASC,KAAT,OAAkD;AAAA;;AAAA,MAAnC;AAACC,IAAAA,aAAD;AAAeC,IAAAA,OAAf;AAAuBC,IAAAA;AAAvB,GAAmC;AAChD,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAhC;AACAY,EAAAA,EAAE;AACF,QAAMC,MAAM,GAAGX,SAAS,EAAxB;AAEA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;;AACA,QAAMgB,YAAY,GAAIC,KAAD,IAAW;AAC9BF,IAAAA,WAAW,CAAEG,YAAD,IAAkB;AAC5B,YAAMC,WAAW,GAAG,CAAC,GAAGD,YAAJ,CAApB;AACAC,MAAAA,WAAW,CAACF,KAAD,CAAX,GAAqB,IAArB;AACA,aAAOE,WAAP;AACD,KAJU,CAAX;AAKAC,IAAAA,UAAU,CAAC,MAAM;AACfL,MAAAA,WAAW,CAAEG,YAAD,IAAkB;AAC5B,cAAMC,WAAW,GAAG,CAAC,GAAGD,YAAJ,CAApB;AACAC,QAAAA,WAAW,CAACF,KAAD,CAAX,GAAqB,KAArB;AACA,eAAOE,WAAP;AACD,OAJU,CAAX;AAKD,KANS,EAMP,IANO,CAAV;AAOD,GAbD;;AAgBApB,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAIsB,UAAU,GAACd,aAAa,CAACM,MAAM,CAACS,MAAR,CAA5B,CAFY,CAEgC;;AAC5CX,IAAAA,QAAQ,CAACU,UAAD,CAAR;AACH,GAJQ,EAIN,CAACR,MAAM,CAACS,MAAR,EAAeZ,KAAf,EAAqBD,SAArB,CAJM,CAAT;AAMA,sBAEI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,IAAd;AAAA,iBAAoBI,MAAM,CAACU,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGd,SAAS,iBAAE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,OAAO,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFd,eAKE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBACCD,OAAO,CAACgB,GAAR,CAAaC,IAAD,iBACX;AAAmB,QAAA,SAAS,EAAC,YAA7B;AAAA,gCACE;AAAA,oBAAKA,IAAI,CAACC;AAAV;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA,SAAUF,IAAI,CAACG,EAAf;AAAA;AAAA;AAAA;AAAA,cADD;AADD;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAmBD;;GA/CQtB,K;UAGQJ,S;;;KAHRI,K;AAiDT,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useParams } from 'react-router';\r\nimport { PoweroffOutlined } from '@ant-design/icons';\r\nimport { Button, Flex } from 'antd';\r\n\r\nfunction Posts({getFetchPosts,postArr,isLoading}) {\r\n  let [posts, setPosts] = useState([]);\r\n  le\r\n  const params = useParams();\r\n\r\n  const [loadings, setLoadings] = useState([]);\r\n  const enterLoading = (index) => {\r\n    setLoadings((prevLoadings) => {\r\n      const newLoadings = [...prevLoadings];\r\n      newLoadings[index] = true;\r\n      return newLoadings;\r\n    });\r\n    setTimeout(() => {\r\n      setLoadings((prevLoadings) => {\r\n        const newLoadings = [...prevLoadings];\r\n        newLoadings[index] = false;\r\n        return newLoadings;\r\n      });\r\n    }, 6000);\r\n  };\r\n\r\n  \r\n  useEffect(() => {\r\n\r\n      let postsArray=getFetchPosts(params.userID);//take the posts from app, and return to screen\r\n      setPosts(postsArray); \r\n  }, [params.userID,posts,isLoading]);\r\n\r\n  return (\r\n    \r\n      <div className=\"posts\">\r\n        <h1 className=\"h1\">{params.userName}'s Posts</h1>\r\n        {isLoading&&<Button type=\"primary\" loading>\r\n          Loading\r\n        </Button>}\r\n        <div className=\"grid-container\">\r\n        {postArr.map((post) => (\r\n          <div key={post.id} className=\"singlePost\">\r\n            <h3>{post.title}</h3>\r\n            <p>{post.body}</p>\r\n          </div>\r\n        ))}\r\n        </div>\r\n        \r\n      </div>\r\n    \r\n  );\r\n}\r\n\r\nexport default Posts;\r\n\r\n"]},"metadata":{},"sourceType":"module"}