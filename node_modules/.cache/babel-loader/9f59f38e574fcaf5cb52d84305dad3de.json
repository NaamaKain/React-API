{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1\\\\Desktop\\\\new react\\\\src\\\\components\\\\AddPost.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, Form, Input } from 'antd';\nimport { useParams } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddPost = _ref => {\n  _s();\n\n  let {\n    currentUser\n  } = _ref;\n  const params = useParams();\n\n  const onFinish = async values => {\n    const post = {\n      title: values.title,\n      body: values.body,\n      userId: params.userID\n    };\n\n    try {\n      const response = await fetch('https://jsonplaceholder.typicode.com/posts', {\n        method: 'POST',\n        body: JSON.stringify(post),\n        headers: {\n          'Content-type': 'application/json; charset=UTF-8'\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to add post');\n      }\n\n      const newPost = await response.json(); // Update posts in parent component\n\n      currentUser.handlePostUpdate(newPost);\n    } catch (error) {\n      console.error('Error adding post:', error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    name: \"basic\",\n    labelCol: {\n      span: 8\n    },\n    wrapperCol: {\n      span: 16\n    },\n    style: {\n      maxWidth: 600\n    },\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    autoComplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Title\",\n      name: \"title\",\n      rules: [{\n        required: true,\n        message: 'Please write your post title'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"Body\",\n      name: \"body\",\n      rules: [{\n        required: true,\n        message: 'Please input post body'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      wrapperCol: {\n        offset: 8,\n        span: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddPost, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = AddPost;\nexport default AddPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPost\");","map":{"version":3,"sources":["C:/Users/1/Desktop/new react/src/components/AddPost.jsx"],"names":["React","Button","Form","Input","useParams","AddPost","currentUser","params","onFinish","values","post","title","body","userId","userID","response","fetch","method","JSON","stringify","headers","ok","Error","newPost","json","handlePostUpdate","error","console","span","maxWidth","remember","required","message","offset"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Button, Form, Input } from 'antd';\r\nimport { useParams } from 'react-router';\r\n\r\nconst AddPost = ({ currentUser }) => {\r\n  const params = useParams();\r\n\r\n  const onFinish = async (values) => {\r\n    const post = {\r\n      title: values.title,\r\n      body: values.body,\r\n      userId: params.userID,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch('https://jsonplaceholder.typicode.com/posts', {\r\n        method: 'POST',\r\n        body: JSON.stringify(post),\r\n        headers: {\r\n          'Content-type': 'application/json; charset=UTF-8',\r\n        },\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Failed to add post');\r\n      }\r\n\r\n      const newPost = await response.json();\r\n\r\n      // Update posts in parent component\r\n      currentUser.handlePostUpdate(newPost);\r\n    } catch (error) {\r\n      console.error('Error adding post:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      name=\"basic\"\r\n      labelCol={{\r\n        span: 8,\r\n      }}\r\n      wrapperCol={{\r\n        span: 16,\r\n      }}\r\n      style={{\r\n        maxWidth: 600,\r\n      }}\r\n      initialValues={{\r\n        remember: true,\r\n      }}\r\n      onFinish={onFinish}\r\n      autoComplete=\"off\"\r\n    >\r\n      <Form.Item\r\n        label=\"Title\"\r\n        name=\"title\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please write your post title',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        label=\"Body\"\r\n        name=\"body\"\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: 'Please input post body',\r\n          },\r\n        ]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n\r\n      <Form.Item\r\n        wrapperCol={{\r\n          offset: 8,\r\n          span: 16,\r\n        }}\r\n      >\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default AddPost;\r\n"]},"metadata":{},"sourceType":"module"}