{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1\\\\Desktop\\\\new react\\\\src\\\\components\\\\Main.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link, Outlet } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport TextField from '@mui/material/TextField';\nimport { PoweroffOutlined } from '@ant-design/icons';\nimport { Button, Flex } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main() {\n  _s();\n\n  const [text, setText] = useState('');\n  const [users, setUsers] = useState([]);\n  const [filteredUsers, setFilteredUsers] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    async function fetchData() {\n      setIsLoading(true); // Set loading state to true\n\n      try {\n        const url = 'https://jsonplaceholder.typicode.com/users';\n        const response = await fetch(url);\n\n        if (!response.ok) {\n          throw new Error(`HTTP error ${response.status}`);\n        }\n\n        const data = await response.json();\n        setUsers(data);\n        setFilteredUsers(data); // Initialize filteredUsers with all users\n      } catch (error) {\n        console.error('ERROR:', error); // Log error to console\n      }\n    }\n\n    setIsLoading(false); // Set loading state to false\n\n    fetchData();\n  }, []);\n  useEffect(() => {\n    const filtered = users.filter(user => user.name.toLowerCase().includes(text.toLowerCase()) || user.email.toLowerCase().includes(text.toLowerCase()));\n    setFilteredUsers(filtered);\n  }, [users, text]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"filled-basic\",\n      label: \"search\",\n      variant: \"filled\",\n      onChange: event => setText(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      loading: true,\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      sx: {\n        maxHeight: 400\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            className: \"heads\",\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"email@\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"company-name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: \"posts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: filteredUsers.map(user => /*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              '&:last-child td, &:last-child th': {\n                border: 0\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: user.company.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: `/${user.id}/Posts`,\n                children: \"show posts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 43\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)]\n          }, user.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Main, \"4sM+qw/EccLuJUNsmHWPmPa2VRI=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/1/Desktop/new react/src/components/Main.jsx"],"names":["React","Link","Outlet","useEffect","useState","useNavigate","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TextField","PoweroffOutlined","Button","Flex","Main","text","setText","users","setUsers","filteredUsers","setFilteredUsers","isLoading","setIsLoading","fetchData","url","response","fetch","ok","Error","status","data","json","error","console","filtered","filter","user","name","toLowerCase","includes","email","event","target","value","maxHeight","map","border","company","id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Link, Outlet } from 'react-router-dom';\r\nimport { useEffect, useState } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport TextField from '@mui/material/TextField';\r\nimport { PoweroffOutlined } from '@ant-design/icons';\r\nimport { Button, Flex } from 'antd';\r\n\r\nfunction Main() {\r\n  const [text, setText] = useState('');\r\n  const [users, setUsers] = useState([]);\r\n  const [filteredUsers, setFilteredUsers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      setIsLoading(true); // Set loading state to true\r\n      try {\r\n        const url = 'https://jsonplaceholder.typicode.com/users';\r\n        const response = await fetch(url);\r\n\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error ${response.status}`);\r\n        }\r\n\r\n        const data = await response.json();\r\n        setUsers(data);\r\n        setFilteredUsers(data); // Initialize filteredUsers with all users\r\n      } catch (error) {\r\n        console.error('ERROR:', error); // Log error to console\r\n      }\r\n    }\r\n    setIsLoading(false); // Set loading state to false\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const filtered = users.filter((user) =>\r\n      user.name.toLowerCase().includes(text.toLowerCase()) ||\r\n      user.email.toLowerCase().includes(text.toLowerCase())\r\n    );\r\n    setFilteredUsers(filtered);\r\n  }, [users, text]);\r\n\r\n  return (\r\n    <div className=\"main\">\r\n     <br/>\r\n     \r\n      <TextField id=\"filled-basic\" label=\"search\" variant=\"filled\" onChange={(event) => setText(event.target.value)} />\r\n      {}<Button type=\"primary\" loading>\r\n          Loading\r\n        </Button>\r\n      <TableContainer component={Paper} sx={{ maxHeight: 400 }}>\r\n        <Table aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow className=\"heads\" >\r\n              \r\n              <TableCell align=\"center\">name</TableCell>\r\n              <TableCell align=\"center\">email@</TableCell>\r\n              <TableCell align=\"center\">company-name</TableCell>\r\n              <TableCell align=\"center\">posts</TableCell>\r\n              \r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {filteredUsers.map((user) => (\r\n              <TableRow\r\n                key={user.name}\r\n                sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\r\n              >\r\n                <TableCell component=\"th\" scope=\"row\">\r\n                  {user.name}\r\n                </TableCell>\r\n                <TableCell align=\"center\">{user.email}</TableCell>\r\n                <TableCell align=\"center\">{user.company.name}</TableCell>\r\n                <TableCell align=\"center\"><Link to={`/${user.id}/Posts`}>show posts</Link></TableCell>\r\n                \r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}