{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u05DE\\u05D3\\u05E2\\u05D9 \\u05D4\\u05DE\\u05D7\\u05E9\\u05D1\\\\fullstuck\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05E7\\u05D8\\u05D9\\u05DD\\\\react\\\\part-two\\\\src\\\\components\\\\Posts.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Posts() {\n  _s();\n\n  let navigate = useNavigate();\n  let [posts, setPosts] = useState([]);\n  let userId = JSON.parse(localStorage.getItem('userName'))[0].id;\n  useEffect(() => {\n    if (localStorage.getItem(\"userName\") == 'undefined' || localStorage.getItem(\"userName\") == null) {\n      console.log('not found');\n      navigate(\"/\");\n    } else {\n      let url = `https://jsonplaceholder.typicode.com/posts?userId=${userId}`;\n      fetch(url).then(response => response.json()).then(response => {\n        setPosts(response);\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n      cl: true,\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: `/${userId}/Main/posts/post/${post.id}`,\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }, this)\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Posts, \"qQ3YxOpq8nIvxfa6GYj5Pc4Bf3I=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["D:/מדעי המחשב/fullstuck/פרויקטים/react/part-two/src/components/Posts.jsx"],"names":["React","useEffect","useState","Link","useNavigate","Posts","navigate","posts","setPosts","userId","JSON","parse","localStorage","getItem","id","console","log","url","fetch","then","response","json","map","post","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAAQC,WAAR,QAA0B,kBAA1B;;;AAGA,SAASC,KAAT,GAAiB;AAAA;;AACb,MAAIC,QAAQ,GAAGF,WAAW,EAA1B;AACA,MAAI,CAACG,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAIO,MAAM,GAAIC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAD,CAA+C,CAA/C,EAAkDC,EAA/D;AACAb,EAAAA,SAAS,CACL,MAAM;AACJ,QAAKW,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAD,IAAsC,WAAtC,IAAsDD,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAD,IAAsC,IAA/F,EAAqG;AACnGE,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAV,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,KAHD,MAIK;AACH,UAAIW,GAAG,GAAI,qDAAoDR,MAAO,EAAtE;AACAS,MAAAA,KAAK,CAACD,GAAD,CAAL,CACKE,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUC,QAAQ,IAAI;AACdZ,QAAAA,QAAQ,CAACY,QAAD,CAAR;AACH,OAJL;AAKD;AACF,GAdI,EAcF,EAdE,CAAT;AAgBA,sBACI;AAAA,cACIb,KAAK,CAACe,GAAN,CAAWC,IAAD,iBACN;AAAmB,MAAA,EAAE,MAArB;AAAA,6BACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAG,IAAGd,MAAO,oBAAmBc,IAAI,CAACT,EAAG,EAAhD;AAAA,kBAAqDS,IAAI,CAACC;AAA1D;AAAA;AAAA;AAAA;AAAA;AADJ,OAAUD,IAAI,CAACT,EAAf;AAAA;AAAA;AAAA;AAAA,YADJ;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GA7BQT,K;UACUD,W;;;KADVC,K;AA8BT,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\n\r\nfunction Posts() {\r\n    let navigate = useNavigate();\r\n    let [posts, setPosts] = useState([]);\r\n    let userId = (JSON.parse(localStorage.getItem('userName')))[0].id;\r\n    useEffect(\r\n        () => {\r\n          if ((localStorage.getItem(\"userName\")) == 'undefined' || (localStorage.getItem(\"userName\")) == null) {\r\n            console.log('not found');\r\n            navigate(\"/\");\r\n          }\r\n          else {\r\n            let url = `https://jsonplaceholder.typicode.com/posts?userId=${userId}`;\r\n            fetch(url)\r\n                .then(response => response.json())\r\n                .then(response => {\r\n                    setPosts(response);\r\n                })\r\n          }\r\n        }, []\r\n      );\r\n    return (\r\n        <div>{\r\n            posts.map((post) => (\r\n                <div key={post.id} cl>\r\n                    <Link to={`/${userId}/Main/posts/post/${post.id}`} >{post.title}</Link>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\nexport default Posts;"]},"metadata":{},"sourceType":"module"}