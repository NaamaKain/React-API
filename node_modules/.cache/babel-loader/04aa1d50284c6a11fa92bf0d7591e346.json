{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u05DE\\u05D3\\u05E2\\u05D9 \\u05D4\\u05DE\\u05D7\\u05E9\\u05D1\\\\fullstuck\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05E7\\u05D8\\u05D9\\u05DD\\\\react\\\\part-two\\\\src\\\\components\\\\Photo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Photo(props) {\n  _s();\n\n  let [arr, setPhoto] = useState([]);\n  let [photoId, setPhotoId] = useState(props.album.id * 50 - 50 + 1);\n  let tmpPhotoArr = [];\n  useEffect(function getData() {\n    let url = `https://jsonplaceholder.typicode.com/photos?id=${photoId}`;\n    fetch(url).then(response => response.json()).then(response => {\n      tmpPhotoArr = arr;\n      tmpPhotoArr.push(response);\n      setPhoto(tmpPhotoArr);\n      console.log(arr);\n    });\n  }, [photoId]);\n\n  function changeId() {\n    if (photoId < props) {\n      setPhotoId(photoId + 1);\n    } else {\n      alert(\"you finish load all the album's pictures\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"album \", props.album.id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 1\n    }, this), arr.map(photo => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: photo[0].title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: photo[0].url,\n        height: \"150px\",\n        width: \"150px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: photo[0].thumbnailUrl,\n        height: \"150px\",\n        width: \"150px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 1\n      }, this)]\n    }, photo[0].id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: changeId,\n      id: \"loadedButton\",\n      children: \"load more\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 1\n  }, this);\n}\n\n_s(Photo, \"j9vNev1WFwm8JTKoyI1pXlh/uJw=\");\n\n_c = Photo;\nexport default Photo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Photo\");","map":{"version":3,"sources":["D:/מדעי המחשב/fullstuck/פרויקטים/react/part-two/src/components/Photo.jsx"],"names":["React","useEffect","useState","Photo","props","arr","setPhoto","photoId","setPhotoId","album","id","tmpPhotoArr","getData","url","fetch","then","response","json","push","console","log","changeId","alert","map","photo","title","thumbnailUrl"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,SAASC,KAAT,CAAeC,KAAf,EAAqB;AAAA;;AACjB,MAAI,CAACC,GAAD,EAAMC,QAAN,IAAkBJ,QAAQ,CAAC,EAAD,CAA9B;AACJ,MAAI,CAACK,OAAD,EAASC,UAAT,IAAqBN,QAAQ,CAAGE,KAAK,CAACK,KAAN,CAAYC,EAAZ,GAAe,EAAhB,GAAoB,EAArB,GAAyB,CAA1B,CAAjC;AACA,MAAIC,WAAW,GAAC,EAAhB;AACQV,EAAAA,SAAS,CAAC,SAAUW,OAAV,GACV;AACI,QAAIC,GAAG,GAAI,kDAAiDN,OAAQ,EAApE;AACAO,IAAAA,KAAK,CAACD,GAAD,CAAL,CACKE,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUC,QAAQ,IAAI;AACdL,MAAAA,WAAW,GAACN,GAAZ;AACAM,MAAAA,WAAW,CAACO,IAAZ,CAAiBF,QAAjB;AACAV,MAAAA,QAAQ,CAACK,WAAD,CAAR;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYf,GAAZ;AACH,KAPL;AAQC,GAXI,EAWH,CAACE,OAAD,CAXG,CAAT;;AAYA,WAASc,QAAT,GAAmB;AACf,QAAGd,OAAO,GAACH,KAAX,EAAiB;AACbI,MAAAA,UAAU,CAACD,OAAO,GAAC,CAAT,CAAV;AACH,KAFD,MAGI;AACAe,MAAAA,KAAK,CAAC,0CAAD,CAAL;AACH;AACJ;;AACT,sBACA;AAAA,4BACA;AAAA,2BAAWlB,KAAK,CAACK,KAAN,CAAYC,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAGAL,GAAG,CAACkB,GAAJ,CAASC,KAAD,iBACJ;AAAA,8BACJ;AAAA,kBAAKA,KAAK,CAAC,CAAD,CAAL,CAASC;AAAd;AAAA;AAAA;AAAA;AAAA,cADI,eAEJ;AAAK,QAAA,GAAG,EAAED,KAAK,CAAC,CAAD,CAAL,CAASX,GAAnB;AAAwB,QAAA,MAAM,EAAC,OAA/B;AAAuC,QAAA,KAAK,EAAC;AAA7C;AAAA;AAAA;AAAA;AAAA,cAFI,eAGJ;AAAK,QAAA,GAAG,EAAEW,KAAK,CAAC,CAAD,CAAL,CAASE,YAAnB;AAAiC,QAAA,MAAM,EAAC,OAAxC;AAAgD,QAAA,KAAK,EAAC;AAAtD;AAAA;AAAA;AAAA;AAAA,cAHI;AAAA,OAAUF,KAAK,CAAC,CAAD,CAAL,CAASd,EAAnB;AAAA;AAAA;AAAA;AAAA,YADJ,CAHA,eAUA;AAAQ,MAAA,OAAO,EAAEW,QAAjB;AAA2B,MAAA,EAAE,EAAC,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAcC;;GAtCQlB,K;;KAAAA,K;AAuCT,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nfunction Photo(props){\r\n    let [arr, setPhoto] = useState([]);\r\nlet [photoId,setPhotoId]=useState(((props.album.id*50)-50)+1);\r\nlet tmpPhotoArr=[];\r\n        useEffect(function  getData()\r\n        {\r\n            let url = `https://jsonplaceholder.typicode.com/photos?id=${photoId}`;\r\n            fetch(url)\r\n                .then(response => response.json())\r\n                .then(response => {\r\n                    tmpPhotoArr=arr;\r\n                    tmpPhotoArr.push(response);\r\n                    setPhoto(tmpPhotoArr);\r\n                    console.log(arr);\r\n                })\r\n            },[photoId]);\r\n        function changeId(){\r\n            if(photoId<props){\r\n                setPhotoId(photoId+1);\r\n            }\r\n            else{\r\n                alert(\"you finish load all the album's pictures\");\r\n            }\r\n        }\r\nreturn(\r\n<div>\r\n<h1>album {props.album.id}</h1>\r\n{\r\narr.map((photo)=>(\r\n    <div key={photo[0].id}>\r\n<h1>{photo[0].title}</h1>\r\n<img src={photo[0].url} height=\"150px\" width=\"150px\"></img>\r\n<img src={photo[0].thumbnailUrl} height=\"150px\" width=\"150px\"></img>\r\n</div>\r\n))} \r\n<button onClick={changeId} id=\"loadedButton\" >load more</button>\r\n</div>\r\n);\r\n}\r\nexport default Photo;"]},"metadata":{},"sourceType":"module"}