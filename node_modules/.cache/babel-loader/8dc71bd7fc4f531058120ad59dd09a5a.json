{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1\\\\Desktop\\\\new react\\\\src\\\\components\\\\Main.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Link, Outlet } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main() {\n  _s();\n\n  let navigate = useNavigate();\n  let [users, setUsers] = useState([]);\n  let [userID, setUserId] = useState();\n  let [posts, setPosts] = useState([]);\n\n  function showPosts(userId) {\n    setUserId(userId);\n    let url = `https://jsonplaceholder.typicode.com/posts?userId=${userId}`;\n    fetch(url).then(response => response.json()).then(response => {\n      setPosts(response);\n    });\n  }\n\n  useEffect(() => {\n    async function getFetch() {\n      let url = `https://jsonplaceholder.typicode.com/users`;\n      let response = await fetch(url);\n      let a = await response.json();\n      setUsers(a);\n      setUserId('1');\n      let url2 = `https://jsonplaceholder.typicode.com/posts?userId=${userID}`;\n      let response2 = await fetch(url2);\n      let b = await response2.json();\n      setPosts(b);\n    }\n\n    getFetch();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"company name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"posts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map(item => {\n          return /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: item.company.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => showPosts(item.id),\n                children: \"show users posts\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 11\n            }, this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 9\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"h1\",\n        children: [\"user \", userID, \"s Posts\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), posts.map(post => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"LinksMenu\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: post.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 20\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 6\n  }, this);\n}\n\n_s(Main, \"bqW8IQWG41ljlU5WnxE3b9NQPQ0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/1/Desktop/new react/src/components/Main.jsx"],"names":["React","Link","Outlet","useEffect","useState","useNavigate","Main","navigate","users","setUsers","userID","setUserId","posts","setPosts","showPosts","userId","url","fetch","then","response","json","getFetch","a","url2","response2","b","map","item","name","email","company","id","post","title","body"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport { Link ,Outlet} from 'react-router-dom';\r\nimport {useEffect, useState } from 'react';\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\n\r\nfunction Main() {\r\n    let navigate= useNavigate();\r\n    let [users, setUsers] = useState([]);\r\n    let [userID, setUserId] = useState();\r\n    let [posts, setPosts] = useState([]);\r\n    function showPosts(userId){\r\n      setUserId(userId);\r\n      let url = `https://jsonplaceholder.typicode.com/posts?userId=${userId}`;\r\n      fetch(url)\r\n          .then(response => response.json())\r\n          .then(response => {\r\n              setPosts(response);\r\n          })\r\n    }\r\n    useEffect(\r\n        () => {\r\n          async function getFetch(){\r\n            let url = `https://jsonplaceholder.typicode.com/users`;\r\n            let response=await fetch(url);\r\n            let a =await response.json();\r\n            setUsers(a);\r\n            setUserId('1');\r\n            let url2 = `https://jsonplaceholder.typicode.com/posts?userId=${userID}`;\r\n            let response2 =await fetch(url2);\r\n            let b =await response2.json();\r\n            setPosts(b);\r\n        }  \r\n        getFetch();\r\n        }, []\r\n      );\r\n    return (\r\n     <div className=\"body\">\r\n                <h1>users</h1>\r\n                <table>\r\n                <thead>\r\n    <tr>\r\n      <th>name</th>\r\n      <th>email</th>\r\n      <th>company name</th>\r\n      <th>posts</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    {users.map(item => {\r\n      return (\r\n        <tr key={item.id}>\r\n          <td>{ item.name }</td>\r\n          <td>{ item.email }</td>\r\n          <td>{ item.company.name }</td>\r\n          <td><button onClick={() => showPosts(item.id)}>show users posts</button></td>\r\n        </tr>\r\n      );\r\n    })}\r\n  </tbody>\r\n                  </table>\r\n\r\n                  <div>\r\n          <h1 className=\"h1\">user {userID}s Posts</h1>\r\n          {\r\n            posts.map((post) => (\r\n                <div key={post.id} className=\"LinksMenu\">\r\n                   <h3>{post.title}</h3>\r\n                   <h4>{post.body}</h4>\r\n                </div>\r\n            ))}\r\n        </div>\r\n\r\n            </div>\r\n\r\n    );\r\n}\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}