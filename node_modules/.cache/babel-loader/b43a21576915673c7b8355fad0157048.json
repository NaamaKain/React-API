{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u05DE\\u05D3\\u05E2\\u05D9 \\u05D4\\u05DE\\u05D7\\u05E9\\u05D1\\\\fullstuck\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05E7\\u05D8\\u05D9\\u05DD\\\\react\\\\part-two\\\\src\\\\components\\\\Todos.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport { async } from 'q';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Todos() {\n  _s();\n\n  let [arr, setarr] = useState([{\n    title: '',\n    completed: '',\n    id: ''\n  }]);\n  const [user, setuser] = useState({});\n  let navigate = useNavigate();\n\n  async function getFetch() {\n    let response = await fetch(`https://jsonplaceholder.typicode.com/todos?userId=${user.id}`);\n    let set = await response.json();\n    let tempArr = [{\n      title: '',\n      completed: '',\n      id: ''\n    }];\n\n    for (let i = 0; i < set.length; i++) {\n      tempArr[i] = {\n        title: '',\n        completed: '',\n        id: ''\n      };\n      tempArr[i].title = set[i].title;\n      tempArr[i].id = set[i].id;\n      tempArr[i].completed = set[i].completed;\n      setarr(tempArr);\n    }\n  }\n\n  useEffect(() => {\n    if (localStorage.getItem(\"userName\") == 'undefined' || localStorage.getItem(\"userName\") == null) {\n      console.log('not found');\n      navigate(\"/\");\n    } else {\n      setuser(JSON.parse(localStorage.getItem(\"userName\"))[0]); //console.log(\"kjoi\")\n\n      getFetch();\n    }\n  }, []);\n\n  const changeOrder = _ref => {\n    let {\n      target\n    } = _ref;\n    const todosArr = [...arr];\n\n    switch (target.value) {\n      case \"by order\":\n        todosArr.sort((a, b) => a.id - b.id);\n        break;\n\n      case \"isCompleted\":\n        todosArr.sort((a, b) => b.completed - a.completed);\n        break;\n\n      case \"alphabeit\":\n        todosArr.sort((a, b) => a.title > b.title ? 1 : a.title == b.title ? 0 : -1);\n        break;\n\n      case \"random\":\n        todosArr.sort(() => Math.random() - 0.5);\n    }\n\n    setarr(todosArr);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"h1\",\n      children: \"To do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: changeOrder,\n      className: \"salectBar\",\n      children: [\"by order\", \"isCompleted\", \"alphabeit\", \"random\"].map(item => /*#__PURE__*/_jsxDEV(\"option\", {\n        children: item\n      }, item, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 73\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todos\",\n      children: arr.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: todo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          defaultChecked: todo.completed\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 5\n        }, this)]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Todos, \"k7BnCFyGcucejS+oO0iXoTk9vu4=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Todos;\nexport default Todos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"sources":["D:/מדעי המחשב/fullstuck/פרויקטים/react/part-two/src/components/Todos.jsx"],"names":["React","useEffect","useState","useNavigate","async","Todos","arr","setarr","title","completed","id","user","setuser","navigate","getFetch","response","fetch","set","json","tempArr","i","length","localStorage","getItem","console","log","JSON","parse","changeOrder","target","todosArr","value","sort","a","b","Math","random","map","item","todo"],"mappings":"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","sourcesContent":["import React, {useEffect, useState } from 'react';\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport { async } from 'q';\r\n\r\nfunction Todos(){\r\n  let[arr,setarr]=useState([{title:'',completed:'',id:''}])\r\n  const [user,setuser]=useState({});\r\n  let navigate = useNavigate();\r\n  async function getFetch(){\r\n    let response=await fetch(`https://jsonplaceholder.typicode.com/todos?userId=${user.id}`);\r\n    let set=await response.json();\r\n    let tempArr=[{title:'',completed:'',id:''}]\r\n      for(let i=0;i<set.length;i++){\r\n         tempArr[i]={title:'',completed:'',id:''}\r\n         tempArr[i].title=set[i].title;\r\n         tempArr[i].id=set[i].id;\r\n         tempArr[i].completed=set[i].completed\r\n      setarr(tempArr)\r\n      } \r\n  }\r\nuseEffect(()=>{\r\n    if ((localStorage.getItem(\"userName\")) == 'undefined' || (localStorage.getItem(\"userName\")) == null) {\r\n        console.log('not found');\r\n        navigate(\"/\");\r\n    }\r\n        else{\r\n    setuser((JSON.parse(localStorage.getItem(\"userName\")))[0]);\r\n   //console.log(\"kjoi\")\r\n   getFetch();\r\n \r\n        }\r\n   },[])\r\nconst changeOrder = ({ target }) => {\r\n    const todosArr = [...arr];\r\n    switch (target.value) {\r\n        case \"by order\":\r\n            todosArr.sort((a, b) => a.id - b.id)\r\n            break;\r\n        case \"isCompleted\":\r\n            todosArr.sort((a, b) => b.completed - a.completed)\r\n            break;\r\n        case \"alphabeit\":\r\n            todosArr.sort((a, b) => (a.title > b.title) ? 1 : (a.title == b.title) ? 0 : -1)\r\n            break;\r\n        case \"random\":\r\n            todosArr.sort(() => Math.random() - 0.5);\r\n    }\r\n    setarr(todosArr);\r\n}\r\nreturn(\r\n    <div>\r\n\r\n         <h1 className=\"h1\">To do</h1>\r\n         <select onChange={changeOrder} className=\"salectBar\">\r\n        {[\"by order\", \"isCompleted\", \"alphabeit\", \"random\"].map(item => <option key={item}>{item}</option>)}\r\n    </select>\r\n    <div className=\"todos\">\r\n    {     \r\n    arr.map((todo)=>(\r\n    <div key={todo.id}>\r\n    <h2>{todo.title}</h2>\r\n    <input type=\"checkbox\" defaultChecked={todo.completed}></input>   \r\n    </div>\r\n    ))}\r\n    </div>\r\n    </div>\r\n    );  \r\n    }\r\n    export default Todos;\r\n"]},"metadata":{},"sourceType":"module"}