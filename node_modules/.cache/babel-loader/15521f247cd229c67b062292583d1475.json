{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1\\\\Desktop\\\\new react\\\\src\\\\components\\\\AddPost.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, Checkbox, Form, Input } from 'antd';\nimport { useParams } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddPost = p => {\n  _s();\n\n  let params = useParams();\n\n  const onFinish = values => {\n    const post = {\n      label: values.label,\n      body: values.body,\n      userId: params.userID\n    };\n    fetch('https://jsonplaceholder.typicode.com/posts', {\n      method: 'POST',\n      body: JSON.stringify(post),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    }).then(response => response.json()).then(newPost => {\n      handlePostUpdate(newPost); // Call the function to update posts\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    name: \"basic\",\n    labelCol: {\n      span: 8\n    },\n    wrapperCol: {\n      span: 16\n    },\n    style: {\n      maxWidth: 600\n    },\n    initialValues: {\n      remember: true\n    },\n    onFinish: onFinish,\n    autoComplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"label\",\n      name: \"label\",\n      rules: [{\n        required: true,\n        message: 'Please write your posts label'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: \"body\",\n      name: \"body\",\n      rules: [{\n        required: true,\n        message: 'Please input posts body'\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"remember\",\n      valuePropName: \"checked\",\n      wrapperCol: {\n        offset: 8,\n        span: 16\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      wrapperCol: {\n        offset: 8,\n        span: 16\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n};\n\n_s(AddPost, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = AddPost;\nexport default AddPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPost\");","map":{"version":3,"sources":["C:/Users/1/Desktop/new react/src/components/AddPost.jsx"],"names":["React","Button","Checkbox","Form","Input","useParams","AddPost","p","params","onFinish","values","post","label","body","userId","userID","fetch","method","JSON","stringify","headers","then","response","json","newPost","handlePostUpdate","span","maxWidth","remember","required","message","offset"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,IAA3B,EAAiCC,KAAjC,QAA8C,MAA9C;AACA,SAASC,SAAT,QAA0B,cAA1B;;;AACA,MAAMC,OAAO,GAAIC,CAAD,IAAO;AAAA;;AACnB,MAAIC,MAAM,GAACH,SAAS,EAApB;;AAEA,QAAMI,QAAQ,GAAIC,MAAD,IAAY;AAC3B,UAAMC,IAAI,GAAG;AACXC,MAAAA,KAAK,EAAEF,MAAM,CAACE,KADH;AAEXC,MAAAA,IAAI,EAAEH,MAAM,CAACG,IAFF;AAGXC,MAAAA,MAAM,EAACN,MAAM,CAACO;AAHH,KAAb;AAMAC,IAAAA,KAAK,CAAC,4CAAD,EAA+C;AAClDC,MAAAA,MAAM,EAAE,MAD0C;AAElDJ,MAAAA,IAAI,EAAEK,IAAI,CAACC,SAAL,CAAeR,IAAf,CAF4C;AAGlDS,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHyC,KAA/C,CAAL,CAOGC,IAPH,CAOSC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EAPtB,EAQGF,IARH,CAQSG,OAAD,IAAa;AACfC,MAAAA,gBAAgB,CAACD,OAAD,CAAhB,CADe,CACY;AAC5B,KAVL;AAWD,GAlBD;;AAoBA,sBACE,QAAC,IAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,QAAQ,EAAE;AACRE,MAAAA,IAAI,EAAE;AADE,KAFZ;AAKE,IAAA,UAAU,EAAE;AACVA,MAAAA,IAAI,EAAE;AADI,KALd;AAQE,IAAA,KAAK,EAAE;AACLC,MAAAA,QAAQ,EAAE;AADL,KART;AAWE,IAAA,aAAa,EAAE;AACbC,MAAAA,QAAQ,EAAE;AADG,KAXjB;AAcE,IAAA,QAAQ,EAAEnB,QAdZ;AAeE,IAAA,YAAY,EAAC,KAff;AAAA,4BAiBE,QAAC,IAAD,CAAM,IAAN;AACE,MAAA,KAAK,EAAC,OADR;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,KAAK,EAAE,CACL;AACEoB,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK,CAHT;AAAA,6BAUE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,YAjBF,eA8BE,QAAC,IAAD,CAAM,IAAN;AACE,MAAA,KAAK,EAAC,MADR;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,KAAK,EAAE,CACL;AACED,QAAAA,QAAQ,EAAE,IADZ;AAEEC,QAAAA,OAAO,EAAE;AAFX,OADK,CAHT;AAAA,6BAUE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAVF;AAAA;AAAA;AAAA;AAAA,YA9BF,eA2CE,QAAC,IAAD,CAAM,IAAN;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,aAAa,EAAC,SAFhB;AAGE,MAAA,UAAU,EAAE;AACVC,QAAAA,MAAM,EAAE,CADE;AAEVL,QAAAA,IAAI,EAAE;AAFI;AAHd;AAAA;AAAA;AAAA;AAAA,YA3CF,eAqDE,QAAC,IAAD,CAAM,IAAN;AACE,MAAA,UAAU,EAAE;AACVK,QAAAA,MAAM,EAAE,CADE;AAEVL,QAAAA,IAAI,EAAE;AAFI,OADd;AAAA,6BAME,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,SAAb;AAAuB,QAAA,QAAQ,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,YArDF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkED,CAzFH;;GAAMpB,O;UACSD,S;;;KADTC,O;AA2FJ,eAAeA,OAAf","sourcesContent":["import React from 'react';\r\nimport { Button, Checkbox, Form, Input } from 'antd';\r\nimport { useParams } from 'react-router';\r\nconst AddPost = (p) => {\r\n    let params=useParams();\r\n    \r\n    const onFinish = (values) => {\r\n      const post = {\r\n        label: values.label,\r\n        body: values.body,\r\n        userId:params.userID,\r\n    };\r\n    \r\n      fetch('https://jsonplaceholder.typicode.com/posts', {\r\n        method: 'POST',\r\n        body: JSON.stringify(post),\r\n        headers: {\r\n          'Content-type': 'application/json; charset=UTF-8',\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then((newPost) => {\r\n            handlePostUpdate(newPost); // Call the function to update posts\r\n          })\r\n    };\r\n  \r\n    return (\r\n      <Form\r\n        name=\"basic\"\r\n        labelCol={{\r\n          span: 8,\r\n        }}\r\n        wrapperCol={{\r\n          span: 16,\r\n        }}\r\n        style={{\r\n          maxWidth: 600,\r\n        }}\r\n        initialValues={{\r\n          remember: true,\r\n        }}\r\n        onFinish={onFinish}\r\n        autoComplete=\"off\"\r\n      >\r\n        <Form.Item\r\n          label=\"label\"\r\n          name=\"label\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please write your posts label',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n  \r\n        <Form.Item\r\n          label=\"body\"\r\n          name=\"body\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: 'Please input posts body',\r\n            },\r\n          ]}\r\n        >\r\n          <Input />\r\n        </Form.Item>\r\n  \r\n        <Form.Item\r\n          name=\"remember\"\r\n          valuePropName=\"checked\"\r\n          wrapperCol={{\r\n            offset: 8,\r\n            span: 16,\r\n          }}\r\n        >\r\n        </Form.Item>\r\n  \r\n        <Form.Item\r\n          wrapperCol={{\r\n            offset: 8,\r\n            span: 16,\r\n          }}\r\n        >\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  };\r\n  \r\n  export default AddPost"]},"metadata":{},"sourceType":"module"}