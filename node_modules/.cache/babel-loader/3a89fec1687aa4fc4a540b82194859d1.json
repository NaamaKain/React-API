{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1\\\\Desktop\\\\new react\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Main from './components/Main';\nimport Posts from './components/Posts';\nimport { Routes, Route } from 'react-router-dom';\nimport AddPost from './components/AddPost';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let [posts, setPosts] = useState([]);\n\n  const getFetchPosts = async IDuser => {\n    try {\n      const url = `https://jsonplaceholder.typicode.com/posts?userId=${IDuser}`;\n      const response = await fetch(url);\n\n      if (!response.ok) {\n        throw new Error(`HTTP error ${response.status}`);\n      }\n\n      const fetchedPosts = await response.json();\n      setPosts(fetchedPosts);\n    } catch (error) {\n      console.error('Error fetching posts:', error); // Optionally handle the error here, e.g., display an error message\n    }\n  };\n\n  function handlePostUpdate(newPost) {\n    // This function now accepts a new post as an argument\n    setPosts([...posts, newPost]); // Append new post to array\n\n    console.log(posts);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Posts - this is us...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/:userName/:userID/Posts\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Posts, {\n              getFetchPosts: getFetchPosts,\n              postArr: posts\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(AddPost, {\n              handlePostUpdate: handlePostUpdate,\n              postArr: posts\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QFg9xhJ0x9yrnvUQrdhfY5IZlDs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/1/Desktop/new react/src/App.js"],"names":["React","useState","Main","Posts","Routes","Route","AddPost","App","posts","setPosts","getFetchPosts","IDuser","url","response","fetch","ok","Error","status","fetchedPosts","json","error","console","handlePostUpdate","newPost","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,QAA8B,kBAA9B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAO,aAAP;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACX,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAhC;;AAGA,QAAMS,aAAa,GAAG,MAAOC,MAAP,IAAkB;AACtC,QAAI;AACF,YAAMC,GAAG,GAAI,qDAAoDD,MAAO,EAAxE;AACA,YAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAD,CAA5B;;AAEA,UAAI,CAACC,QAAQ,CAACE,EAAd,EAAkB;AAChB,cAAM,IAAIC,KAAJ,CAAW,cAAaH,QAAQ,CAACI,MAAO,EAAxC,CAAN;AACD;;AAED,YAAMC,YAAY,GAAG,MAAML,QAAQ,CAACM,IAAT,EAA3B;AACAV,MAAAA,QAAQ,CAACS,YAAD,CAAR;AACD,KAVD,CAUE,OAAOE,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACD,KAAR,CAAc,uBAAd,EAAuCA,KAAvC,EADc,CAEd;AACD;AACF,GAfD;;AAkBF,WAASE,gBAAT,CAA2BC,OAA3B,EAAoC;AAChC;AACAd,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWe,OAAX,CAAD,CAAR,CAFgC,CAED;;AAC/BF,IAAAA,OAAO,CAACG,GAAR,CAAYhB,KAAZ;AACH;;AAAA;AAED,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA,6BACF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADE;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACA,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,OAAO,eAAE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,KAAD;AACE,UAAA,IAAI,EAAC,0BADP;AAEE,UAAA,OAAO,eACL;AAAA,oCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,KAAD;AAAO,cAAA,aAAa,EAAEE,aAAtB;AAAqC,cAAA,OAAO,EAAEF;AAA9C;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,OAAD;AAAS,cAAA,gBAAgB,EAAEc,gBAA3B;AAA6C,cAAA,OAAO,EAAEd;AAAtD;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAlDQD,G;;KAAAA,G;AAmDT,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport Main from './components/Main';\r\nimport Posts from './components/Posts';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport AddPost from './components/AddPost';\r\nimport './style.css'\r\n\r\n\r\nfunction App() {\r\n    let [posts, setPosts] = useState([]);\r\n    \r\n\r\n    const getFetchPosts = async (IDuser) => {\r\n      try {\r\n        const url = `https://jsonplaceholder.typicode.com/posts?userId=${IDuser}`;\r\n        const response = await fetch(url);\r\n  \r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error ${response.status}`);\r\n        }\r\n  \r\n        const fetchedPosts = await response.json();\r\n        setPosts(fetchedPosts);\r\n      } catch (error) {\r\n        console.error('Error fetching posts:', error);\r\n        // Optionally handle the error here, e.g., display an error message\r\n      }\r\n    };\r\n\r\n\r\n  function handlePostUpdate (newPost) {\r\n      // This function now accepts a new post as an argument\r\n      setPosts([...posts, newPost]); // Append new post to array\r\n      console.log(posts)\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      <div className=\"header\">\r\n    <h2>Posts - this is us...</h2>\r\n  </div>\r\n      <div className=\"body\">\r\n      <Routes>\r\n        <Route path=\"/\" element={<Main  />} />\r\n        <Route\r\n          path=\"/:userName/:userID/Posts\"\r\n          element={\r\n            <div>\r\n              <Main  />\r\n              <Posts getFetchPosts={getFetchPosts} postArr={posts} />\r\n              <AddPost handlePostUpdate={handlePostUpdate} postArr={posts} /> \r\n            </div>\r\n          }\r\n        />\r\n      </Routes>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}