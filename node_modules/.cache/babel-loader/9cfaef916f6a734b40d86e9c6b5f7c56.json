{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u05DE\\u05D3\\u05E2\\u05D9 \\u05D4\\u05DE\\u05D7\\u05E9\\u05D1\\\\fullstuck\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05E7\\u05D8\\u05D9\\u05DD\\\\react\\\\part-two\\\\src\\\\components\\\\Photo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport SinglePhoto from './SinglePhoto';\nimport { useParams } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Photo(props) {\n  _s();\n\n  let param = useParams();\n  console.log(param);\n  let [arr, setPhoto] = useState([]);\n  let [photoId, setPhotoId] = useState(param.albumId * 50 - 50 + 1);\n  let tmpPhotoArr = [];\n  useEffect(function getData() {\n    let url = `https://jsonplaceholder.typicode.com/photos?_page=${photoId}`;\n    fetch(url).then(response => response.json()).then(response => {\n      tmpPhotoArr = arr;\n      tmpPhotoArr.push(response);\n      setPhoto(tmpPhotoArr);\n      console.log(arr);\n    });\n  }, [photoId]);\n\n  function changeId() {\n    console.log(photoId, param.albumId);\n\n    if (photoId < param.albumId * 50) {\n      setPhotoId(photoId + 10);\n    } else {\n      alert(\"you finish load all the album's pictures\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"album \", param.albumId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 1\n    }, this), arr.map(photo => /*#__PURE__*/_jsxDEV(SinglePhoto, {\n      single: photo\n    }, photo[0].id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 2\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: changeId,\n      id: \"loadedButton\",\n      children: \"load more\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 1\n  }, this);\n}\n\n_s(Photo, \"9UG1TlyQ8kY8kEYpMLxLSwO8sDw=\", false, function () {\n  return [useParams];\n});\n\n_c = Photo;\nexport default Photo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Photo\");","map":{"version":3,"sources":["D:/מדעי המחשב/fullstuck/פרויקטים/react/part-two/src/components/Photo.jsx"],"names":["React","useEffect","useState","SinglePhoto","useParams","Photo","props","param","console","log","arr","setPhoto","photoId","setPhotoId","albumId","tmpPhotoArr","getData","url","fetch","then","response","json","push","changeId","alert","map","photo","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,SAAT,QAA0B,cAA1B;;;AACA,SAASC,KAAT,CAAeC,KAAf,EAAqB;AAAA;;AACjB,MAAIC,KAAK,GAACH,SAAS,EAAnB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,MAAI,CAACG,GAAD,EAAMC,QAAN,IAAkBT,QAAQ,CAAC,EAAD,CAA9B;AACJ,MAAI,CAACU,OAAD,EAASC,UAAT,IAAqBX,QAAQ,CAAGK,KAAK,CAACO,OAAN,GAAc,EAAf,GAAmB,EAApB,GAAwB,CAAzB,CAAjC;AACA,MAAIC,WAAW,GAAC,EAAhB;AACQd,EAAAA,SAAS,CAAC,SAAUe,OAAV,GACV;AACI,QAAIC,GAAG,GAAI,qDAAoDL,OAAQ,EAAvE;AACAM,IAAAA,KAAK,CAACD,GAAD,CAAL,CACKE,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUC,QAAQ,IAAI;AACdL,MAAAA,WAAW,GAACL,GAAZ;AACAK,MAAAA,WAAW,CAACO,IAAZ,CAAiBF,QAAjB;AACAT,MAAAA,QAAQ,CAACI,WAAD,CAAR;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYC,GAAZ;AACH,KAPL;AAQC,GAXI,EAWH,CAACE,OAAD,CAXG,CAAT;;AAYA,WAASW,QAAT,GAAmB;AACff,IAAAA,OAAO,CAACC,GAAR,CAAYG,OAAZ,EAAqBL,KAAK,CAACO,OAA3B;;AACA,QAAGF,OAAO,GAAEL,KAAK,CAACO,OAAN,GAAc,EAA1B,EAA8B;AAC1BD,MAAAA,UAAU,CAACD,OAAO,GAAC,EAAT,CAAV;AACH,KAFD,MAGI;AACAY,MAAAA,KAAK,CAAC,0CAAD,CAAL;AACH;AACJ;;AACT,sBACA;AAAA,4BACA;AAAA,2BAAWjB,KAAK,CAACO,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,EAGAJ,GAAG,CAACe,GAAJ,CAASC,KAAD,iBACP,QAAC,WAAD;AAAa,MAAA,MAAM,EAAEA;AAArB,OAAiCA,KAAK,CAAC,CAAD,CAAL,CAASC,EAA1C;AAAA;AAAA;AAAA;AAAA,YADD,CAHA,eAOA;AAAQ,MAAA,OAAO,EAAEJ,QAAjB;AAA2B,MAAA,EAAE,EAAC,cAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAWC;;GAtCQlB,K;UACKD,S;;;KADLC,K;AAuCT,eAAeA,KAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport SinglePhoto from './SinglePhoto';\r\nimport { useParams } from 'react-router';\r\nfunction Photo(props){\r\n    let param=useParams();\r\n    console.log(param);\r\n    let [arr, setPhoto] = useState([]);\r\nlet [photoId,setPhotoId]=useState(((param.albumId*50)-50)+1);\r\nlet tmpPhotoArr=[];\r\n        useEffect(function  getData()\r\n        {\r\n            let url = `https://jsonplaceholder.typicode.com/photos?_page=${photoId}`;\r\n            fetch(url)\r\n                .then(response => response.json())\r\n                .then(response => {\r\n                    tmpPhotoArr=arr;\r\n                    tmpPhotoArr.push(response);\r\n                    setPhoto(tmpPhotoArr);\r\n                    console.log(arr);\r\n                })\r\n            },[photoId]);\r\n        function changeId(){\r\n            console.log(photoId ,param.albumId)\r\n            if(photoId<(param.albumId*50)){\r\n                setPhotoId(photoId+10);\r\n            }\r\n            else{\r\n                alert(\"you finish load all the album's pictures\");\r\n            }\r\n        }\r\nreturn(\r\n<div>\r\n<h1>album {param.albumId}</h1>\r\n{\r\narr.map((photo)=>(\r\n <SinglePhoto single={photo} key={photo[0].id}>\r\n     </SinglePhoto>\r\n))} \r\n<button onClick={changeId} id=\"loadedButton\" >load more</button>\r\n</div>\r\n);\r\n}\r\nexport default Photo;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}