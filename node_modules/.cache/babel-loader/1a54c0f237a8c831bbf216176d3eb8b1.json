{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u05DE\\u05D3\\u05E2\\u05D9 \\u05D4\\u05DE\\u05D7\\u05E9\\u05D1\\\\fullstuck\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05E7\\u05D8\\u05D9\\u05DD\\\\react\\\\part-two\\\\src\\\\components\\\\Post.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Post() {\n  _s();\n\n  let param = useParams();\n  let [comments, setComments] = useState([]);\n  let [arr, setArr] = useState([]);\n  let [post, setPost] = useState({\n    body: ''\n  });\n  useEffect(() => {\n    if (localStorage.getItem(\"userName\") == 'undefined' || localStorage.getItem(\"userName\") == null) {\n      console.log('not found');\n      navigate(\"/\");\n    } else {\n      let url = `https://jsonplaceholder.typicode.com/posts?id=${param.postId}`;\n      fetch(url).then(response => response.json()).then(response => {\n        setPost(response[0]);\n        console.log(response);\n      });\n    }\n  }, []);\n  let [text, setText] = useState(\"show comments\");\n\n  function getData() {\n    let url = `https://jsonplaceholder.typicode.com/comments?postId=${param.postId}`;\n    fetch(url).then(response => response.json()).then(response => {\n      setComments(response);\n    });\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  function show() {\n    if (text == \"show comments\") {\n      setArr(comments);\n      setText(\"hide comments\");\n    } else {\n      setArr([]);\n      setText(\"show comments\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" \", post.body]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: show,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 1\n    }, this), arr.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: comment.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [comment.name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 20\n        }, this), \" \", comment.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 1\n      }, this)]\n    }, comment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Post, \"U2WefM7W1lRXXQYkHYVNweQLA20=\", false, function () {\n  return [useParams];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["D:/מדעי המחשב/fullstuck/פרויקטים/react/part-two/src/components/Post.jsx"],"names":["React","useEffect","useState","useParams","Post","param","comments","setComments","arr","setArr","post","setPost","body","localStorage","getItem","console","log","navigate","url","postId","fetch","then","response","json","text","setText","getData","show","map","comment","name","email","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,cAA1B;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACZ,MAAIC,KAAK,GAACF,SAAS,EAAnB;AACA,MAAI,CAACG,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAtC;AACA,MAAI,CAACM,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAAC,EAAD,CAA5B;AACA,MAAI,CAACQ,IAAD,EAAMC,OAAN,IAAeT,QAAQ,CAAC;AAACU,IAAAA,IAAI,EAAC;AAAN,GAAD,CAA3B;AAEIX,EAAAA,SAAS,CACL,MAAM;AACJ,QAAKY,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAD,IAAsC,WAAtC,IAAsDD,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAD,IAAsC,IAA/F,EAAqG;AACnGC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAC,MAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,KAHD,MAIK;AACH,UAAIC,GAAG,GAAI,iDAAgDb,KAAK,CAACc,MAAO,EAAxE;AACAC,MAAAA,KAAK,CAACF,GAAD,CAAL,CACKG,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUC,QAAQ,IAAI;AACdX,QAAAA,OAAO,CAACW,QAAQ,CAAC,CAAD,CAAT,CAAP;AACAP,QAAAA,OAAO,CAACC,GAAR,CAAYM,QAAZ;AACH,OALL;AAOD;AACF,GAhBI,EAgBF,EAhBE,CAAT;AAuBJ,MAAI,CAACE,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAAC,eAAD,CAA9B;;AACA,WAASwB,OAAT,GACA;AACI,QAAIR,GAAG,GAAI,wDAAuDb,KAAK,CAACc,MAAO,EAA/E;AACAC,IAAAA,KAAK,CAACF,GAAD,CAAL,CACKG,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUC,QAAQ,IAAI;AACdf,MAAAA,WAAW,CAACe,QAAD,CAAX;AACH,KAJL;AAKC;;AACLrB,EAAAA,SAAS,CAAC,MAAI;AAACyB,IAAAA,OAAO;AAAG,GAAhB,EAAiB,EAAjB,CAAT;;AACA,WAASC,IAAT,GAAe;AACX,QAAGH,IAAI,IAAE,eAAT,EAAyB;AACrBf,MAAAA,MAAM,CAACH,QAAD,CAAN;AACAmB,MAAAA,OAAO,CAAC,eAAD,CAAP;AACH,KAHD,MAII;AACAhB,MAAAA,MAAM,CAAC,EAAD,CAAN;AACAgB,MAAAA,OAAO,CAAC,eAAD,CAAP;AACH;AACJ;;AACD,sBACI;AAAA,4BAEI;AAAA,sBAAMf,IAAI,CAACE,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGR;AAAQ,MAAA,OAAO,EAAEe,IAAjB;AAAA,gBAAwBH;AAAxB;AAAA;AAAA;AAAA;AAAA,YAHQ,EAKJhB,GAAG,CAACoB,GAAJ,CAASC,OAAD,iBACJ;AAAA,8BACJ;AAAA,kBAAMA,OAAO,CAACjB;AAAd;AAAA;AAAA;AAAA;AAAA,cADI,eAER;AAAA,mBAAKiB,OAAO,CAACC,IAAb,oBAAmB;AAAA;AAAA;AAAA;AAAA,gBAAnB,OAA0BD,OAAO,CAACE,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFQ;AAAA,OAAUF,OAAO,CAACG,EAAlB;AAAA;AAAA;AAAA;AAAA,YADJ,CALI;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;;GAhEQ5B,I;UACKD,S;;;KADLC,I;AAiET,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\n\r\nfunction Post() {\r\n    let param=useParams();\r\n    let [comments, setComments] = useState([]);\r\n    let [arr, setArr] = useState([]);\r\n    let [post,setPost]=useState({body:''});\r\n\r\n        useEffect(\r\n            () => {\r\n              if ((localStorage.getItem(\"userName\")) == 'undefined' || (localStorage.getItem(\"userName\")) == null) {\r\n                console.log('not found');\r\n                navigate(\"/\");\r\n              }\r\n              else {\r\n                let url = `https://jsonplaceholder.typicode.com/posts?id=${param.postId}`;\r\n                fetch(url)\r\n                    .then(response => response.json())\r\n                    .then(response => {\r\n                        setPost(response[0]);\r\n                        console.log(response)\r\n                    });\r\n\r\n              }\r\n            }, []\r\n          );\r\n        \r\n        \r\n           \r\n    \r\n  \r\n    let [text, setText] = useState(\"show comments\");\r\n    function getData()\r\n    {\r\n        let url = `https://jsonplaceholder.typicode.com/comments?postId=${param.postId}`;\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                setComments(response);\r\n            })\r\n        }\r\n    useEffect(()=>{getData()},[])\r\n    function show(){\r\n        if(text==\"show comments\"){\r\n            setArr(comments);\r\n            setText(\"hide comments\")    \r\n        }\r\n        else{\r\n            setArr([])\r\n            setText(\"show comments\")    \r\n        }     \r\n    }  \r\n    return (\r\n        <div>\r\n            {/* {console.log(post.body)} */}\r\n            <h2> {post.body}</h2>\r\n<button onClick={show}>{text}</button>\r\n{\r\n    arr.map((comment)=>(\r\n        <div key={comment.id}>\r\n    <h3 >{comment.body}</h3>\r\n<h5>{comment.name} <br/> {comment.email}</h5>\r\n    </div>\r\n))}\r\n    </div>\r\n    );\r\n}\r\nexport default Post;"]},"metadata":{},"sourceType":"module"}