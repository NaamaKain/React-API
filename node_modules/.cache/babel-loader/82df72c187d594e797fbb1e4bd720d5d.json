{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1\\\\Desktop\\\\new react\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Main from './components/Main';\nimport Posts from './components/Posts';\nimport { Routes, Route, Router, HashRouter, useParams } from 'react-router-dom';\nimport AddPost from './components/AddPost';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [posts, setPosts] = useState([]);\n  const [currentUser, setCurrentUser] = useState();\n\n  function getFetchPosts(IDuser) {\n    const url2 = `https://jsonplaceholder.typicode.com/posts?userId=${IDuser}`;\n    const response2 = fetch(url2);\n    const b = response2.json();\n    setPosts(b);\n    return posts;\n  }\n\n  function handlePostUpdate(newPost) {\n    // This function now accepts a new post as an argument\n    setPosts([...posts, newPost]); // Append new post to array\n  }\n\n  ;\n  const {\n    userID\n  } = useParams();\n  useEffect(() => {\n    setCurrentUser(userID);\n  }, [userID]);\n\n  function handleCurrent(data) {\n    setCurrentUser(data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(Main, {\n          handleCurrent: handleCurrent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/:userID/Posts\",\n        element: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Main, {\n            handleCurrent: handleCurrent,\n            getFetchPosts: getFetchPosts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Posts, {\n            currentUser: currentUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/:userID/Posts/addPost\",\n        element: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Main, {\n            handleCurrent: handleCurrent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Posts, {\n            currentUser: currentUser,\n            getFetchPosts: getFetchPosts\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(AddPost, {\n            currentUser: currentUser,\n            handlePostUpdate: handlePostUpdate\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"eatAJCP5VHLKUZr+z5lHflc6JsI=\", false, function () {\n  return [useParams];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/1/Desktop/new react/src/App.js"],"names":["React","useState","useEffect","Main","Posts","Routes","Route","Router","HashRouter","useParams","AddPost","App","posts","setPosts","currentUser","setCurrentUser","getFetchPosts","IDuser","url2","response2","fetch","b","json","handlePostUpdate","newPost","userID","handleCurrent","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,MAAxB,EAAgCC,UAAhC,EAA4CC,SAA5C,QAA6D,kBAA7D;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AACA,SAASC,GAAT,GAAe;AAAA;;AACf,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACE,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,EAA9C;;AACC,WAASe,aAAT,CAAuBC,MAAvB,EAA+B;AAC9B,UAAMC,IAAI,GAAI,qDAAoDD,MAAO,EAAzE;AACA,UAAME,SAAS,GAAGC,KAAK,CAACF,IAAD,CAAvB;AACA,UAAMG,CAAC,GAAGF,SAAS,CAACG,IAAV,EAAV;AACAT,IAAAA,QAAQ,CAACQ,CAAD,CAAR;AACA,WAAOT,KAAP;AACD;;AACD,WAASW,gBAAT,CAA2BC,OAA3B,EAAoC;AAClC;AACAX,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWY,OAAX,CAAD,CAAR,CAFkC,CAEH;AAChC;;AAAA;AACD,QAAM;AAAEC,IAAAA;AAAF,MAAahB,SAAS,EAA5B;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,cAAc,CAACU,MAAD,CAAd;AACD,GAFQ,EAEN,CAACA,MAAD,CAFM,CAAT;;AAIA,WAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAC3BZ,IAAAA,cAAc,CAACY,IAAD,CAAd;AACD;;AACD,sBACE;AAAA,2BACE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,GAAZ;AAAgB,QAAA,OAAO,eAAE,QAAC,IAAD;AAAM,UAAA,aAAa,EAAED;AAArB;AAAA;AAAA;AAAA;AAAA;AAAzB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,gBADP;AAEE,QAAA,OAAO,eACL;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,aAAa,EAAEA,aAArB;AAAoC,YAAA,aAAa,EAAEV;AAAnD;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,WAAW,EAAEF;AAApB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cAFF,eAWE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,wBADP;AAEE,QAAA,OAAO,eACL;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,aAAa,EAAEY;AAArB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD;AAAO,YAAA,WAAW,EAAEZ,WAApB;AAAkC,YAAA,aAAa,EAAEE;AAAjD;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,OAAD;AAAS,YAAA,WAAW,EAAEF,WAAtB;AAAmC,YAAA,gBAAgB,EAAES;AAArD;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GAjDQZ,G;UAcYF,S;;;KAdZE,G;AAmDT,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Main from './components/Main';\r\nimport Posts from './components/Posts';\r\nimport { Routes, Route, Router, HashRouter, useParams } from 'react-router-dom';\r\nimport AddPost from './components/AddPost';\r\nfunction App() {\r\nconst [posts, setPosts] = useState([]);\r\n  const [currentUser, setCurrentUser] = useState();\r\n   function getFetchPosts(IDuser) {\r\n    const url2 = `https://jsonplaceholder.typicode.com/posts?userId=${IDuser}`;\r\n    const response2 = fetch(url2);\r\n    const b = response2.json();\r\n    setPosts(b);\r\n    return posts;\r\n  }\r\n  function handlePostUpdate (newPost) {\r\n    // This function now accepts a new post as an argument\r\n    setPosts([...posts, newPost]); // Append new post to array\r\n  };\r\n  const { userID } = useParams();\r\n\r\n  useEffect(() => {\r\n    setCurrentUser(userID);\r\n  }, [userID]);\r\n\r\n  function handleCurrent(data) {\r\n    setCurrentUser(data);\r\n  }\r\n  return (\r\n    <div>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Main handleCurrent={handleCurrent} />} />\r\n        <Route\r\n          path=\"/:userID/Posts\"\r\n          element={\r\n            <div>\r\n              <Main handleCurrent={handleCurrent} getFetchPosts={getFetchPosts}/>\r\n              <Posts currentUser={currentUser} />\r\n            </div>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/:userID/Posts/addPost\"\r\n          element={\r\n            <div>\r\n              <Main handleCurrent={handleCurrent} />\r\n              <Posts currentUser={currentUser}  getFetchPosts={getFetchPosts}/>\r\n              <AddPost currentUser={currentUser} handlePostUpdate={handlePostUpdate} /> \r\n            </div>\r\n          }\r\n        />\r\n      </Routes>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}