{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1\\\\Desktop\\\\new react\\\\src\\\\components\\\\AddPost.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddPost = _ref => {\n  _s();\n\n  let {\n    handlePostUpdate\n  } = _ref;\n  let params = useParams();\n\n  const onFinish = () => {\n    let post = {\n      title: title,\n      body: body,\n      userId: params.userID\n    };\n    fetch('https://jsonplaceholder.typicode.com/posts', {\n      method: 'POST',\n      body: JSON.stringify(post),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    }).then(response => response.json()).then(post => {\n      handlePostUpdate(post); // Call the function to update posts\n    });\n    handleClose();\n  };\n\n  const [open, setOpen] = React.useState(false);\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addPostForm\",\n    children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: handleClickOpen,\n        children: \"Add new post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: open,\n        onClose: handleClose,\n        onFinish: onFinish,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Add new post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: \"to add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            autoFocus: true,\n            margin: \"dense\",\n            id: \"name\",\n            label: \"title\",\n            type: \"text\",\n            fullWidth: true,\n            variant: \"standard\",\n            value: title,\n            onChange: e => {\n              setTitle(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            autoFocus: true,\n            margin: \"dense\",\n            id: \"body\",\n            label: \"body\",\n            type: \"text\",\n            fullWidth: true,\n            variant: \"standard\",\n            value: body,\n            onChange: e => {\n              setBody(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onFinish,\n            children: \"Subscribe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddPost, \"Fof8bkSUBejVRyP1MReP/DTgpt0=\", false, function () {\n  return [useParams];\n});\n\n_c = AddPost;\nexport default AddPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPost\");","map":{"version":3,"sources":["C:/Users/1/Desktop/new react/src/components/AddPost.jsx"],"names":["React","useEffect","useState","useParams","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","AddPost","handlePostUpdate","params","onFinish","post","title","body","userId","userID","fetch","method","JSON","stringify","headers","then","response","json","handleClose","open","setOpen","setTitle","setBody","handleClickOpen","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nconst AddPost = ({ handlePostUpdate }) => {\r\n    let params=useParams();\r\n    \r\n    const onFinish = () => {\r\n      let post = {\r\n        title: title,\r\n        body: body,\r\n        userId:params.userID,\r\n    };\r\n    \r\n      fetch('https://jsonplaceholder.typicode.com/posts', {\r\n        method: 'POST',\r\n        body: JSON.stringify(post),\r\n        headers: {\r\n          'Content-type': 'application/json; charset=UTF-8',\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then((post) => {\r\n            handlePostUpdate(post); // Call the function to update posts\r\n          })\r\n          handleClose();\r\n    };\r\n    const [open, setOpen] = React.useState(false);\r\n    const [title, setTitle] = useState('')\r\n    const [body, setBody] = useState('')\r\n    const handleClickOpen = () => {\r\n      setOpen(true);\r\n    };\r\n  \r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n  \r\n    return (\r\n     \r\n        <div className=\"addPostForm\">\r\n            <React.Fragment>\r\n      <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n        Add new post\r\n      </Button>\r\n      <Dialog open={open} onClose={handleClose}  onFinish={onFinish}>\r\n        <DialogTitle>Add new post</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            to add\r\n          </DialogContentText>\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            label=\"title\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            value={title}\r\n          onChange={e => {\r\n            setTitle(e.target.value)\r\n          }}\r\n          />\r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"body\"\r\n            label=\"body\"\r\n            type=\"text\"\r\n            fullWidth\r\n            variant=\"standard\"\r\n            value={body}\r\n          onChange={e => {\r\n            setBody(e.target.value)\r\n          }}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose}>Cancel</Button>\r\n          <Button onClick={onFinish}>Subscribe</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </React.Fragment>\r\n      </div>\r\n     \r\n    );\r\n  };\r\n  \r\n  export default AddPost"]},"metadata":{},"sourceType":"module"}