{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\1\\\\Desktop\\\\new react\\\\src\\\\components\\\\AddPost.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Button, TextField, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddPost = _ref => {\n  _s();\n\n  let {\n    handlePostUpdate,\n    postArr\n  } = _ref;\n  const [isLoading, setIsLoading] = useState(false);\n  const [title, setTitle] = useState('');\n  const [body, setBody] = useState('');\n  const [newID, setNewID] = useState(null);\n\n  const onFinish = async () => {\n    setIsLoading(true);\n    let lastID = postArr.length ? postArr[postArr.length - 1].id : 0; // Optimistic update\n\n    setNewID(lastID + 1);\n    const post = {\n      id: newID,\n      // Use newID for optimistic update\n      title,\n      body,\n      userId: params.userID\n    };\n    const response = await fetch('https://jsonplaceholder.typicode.com/posts', {\n      method: 'POST',\n      body: JSON.stringify(post),\n      headers: {\n        'Content-type': 'application/json; charset=UTF-8'\n      }\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error ${response.status}`);\n    }\n\n    const newPost = await response.json();\n    handlePostUpdate(newPost);\n    await fetchPosts(); // Refetch posts\n\n    handleClose();\n  };\n\n  useEffect(() => {\n    if (postArr.length) {\n      setNewID(postArr[postArr.length - 1].id + 1);\n    }\n  }, [postArr]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addPostForm\",\n    children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: handleClickOpen,\n        children: \"Add new post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: open,\n        onClose: handleClose,\n        onFinish: onFinish,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Add new post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: \"Please fill in the title and content of the post to be published.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            autoFocus: true,\n            margin: \"dense\",\n            id: \"name\",\n            label: \"title\",\n            type: \"text\",\n            fullWidth: true,\n            variant: \"standard\",\n            value: title,\n            onChange: e => setTitle(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            autoFocus: true,\n            margin: \"dense\",\n            id: \"body\",\n            label: \"content\",\n            type: \"text\",\n            fullWidth: true,\n            variant: \"standard\",\n            value: body,\n            onChange: e => setBody(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClose,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: onFinish,\n            children: \"Subscribe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), isLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddPost, \"ThV2ZgAijXdkPvf7ZB4Ze0RxMSE=\");\n\n_c = AddPost;\nexport default AddPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPost\");","map":{"version":3,"sources":["C:/Users/1/Desktop/new react/src/components/AddPost.jsx"],"names":["React","useState","useEffect","Button","TextField","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","AddPost","handlePostUpdate","postArr","isLoading","setIsLoading","title","setTitle","body","setBody","newID","setNewID","onFinish","lastID","length","id","post","userId","params","userID","response","fetch","method","JSON","stringify","headers","ok","Error","status","newPost","json","fetchPosts","handleClose","handleClickOpen","open","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, TextField, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\r\n\r\nconst AddPost = ({ handlePostUpdate, postArr }) => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [title, setTitle] = useState('');\r\n  const [body, setBody] = useState('');\r\n  const [newID, setNewID] = useState(null);\r\n\r\n  const onFinish = async () => {\r\n    setIsLoading(true);\r\n\r\n    let lastID = postArr.length ? postArr[postArr.length - 1].id : 0;\r\n\r\n    // Optimistic update\r\n    setNewID(lastID + 1);\r\n\r\n    const post = {\r\n      id: newID, // Use newID for optimistic update\r\n      title,\r\n      body,\r\n      userId: params.userID,\r\n    };\r\n\r\n    const response = await fetch('https://jsonplaceholder.typicode.com/posts', {\r\n      method: 'POST',\r\n      body: JSON.stringify(post),\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error ${response.status}`);\r\n    }\r\n\r\n    const newPost = await response.json();\r\n    handlePostUpdate(newPost);\r\n    await fetchPosts(); // Refetch posts\r\n    handleClose();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (postArr.length) {\r\n      setNewID(postArr[postArr.length - 1].id + 1);\r\n    }\r\n  }, [postArr]);\r\n\r\n  return (\r\n    <div className=\"addPostForm\">\r\n      <React.Fragment>\r\n        <Button variant=\"outlined\" onClick={handleClickOpen}>\r\n          Add new post\r\n        </Button>\r\n        <Dialog open={open} onClose={handleClose} onFinish={onFinish}>\r\n          <DialogTitle>Add new post</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText>\r\n              Please fill in the title and content of the post to be published.\r\n            </DialogContentText>\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"name\"\r\n              label=\"title\"\r\n              type=\"text\"\r\n              fullWidth\r\n              variant=\"standard\"\r\n              value={title}\r\n              onChange={e => setTitle(e.target.value)}\r\n            />\r\n            <TextField\r\n              autoFocus\r\n              margin=\"dense\"\r\n              id=\"body\"\r\n              label=\"content\"\r\n              type=\"text\"\r\n              fullWidth\r\n              variant=\"standard\"\r\n              value={body}\r\n              onChange={e => setBody(e.target.value)}\r\n            />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={handleClose}>Cancel</Button>\r\n            <Button onClick={onFinish}>Subscribe</Button>\r\n            {isLoading && <Loader />}\r\n          </DialogActions>\r\n        </Dialog>\r\n      </React.Fragment>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPost;\r\n"]},"metadata":{},"sourceType":"module"}