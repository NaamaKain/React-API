{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u05DE\\u05D3\\u05E2\\u05D9 \\u05D4\\u05DE\\u05D7\\u05E9\\u05D1\\\\fullstuck\\\\\\u05E4\\u05E8\\u05D5\\u05D9\\u05E7\\u05D8\\u05D9\\u05DD\\\\react\\\\part-two\\\\src\\\\components\\\\Post.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Post() {\n  _s();\n\n  let param = useParams();\n  let [comments, setComments] = useState([]);\n  let [arr, setArr] = useState([]);\n  let [post, setPost] = useState({});\n\n  function getPost() {\n    let url = `https://jsonplaceholder.typicode.com/posts?id=${param.postId}`;\n    fetch(url).then(response => response.json()).then(response => {\n      setPost(response);\n    });\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n  let [text, setText] = useState(\"show comments\");\n\n  function getData() {\n    let url = `https://jsonplaceholder.typicode.com/comments?postId=${param.postId}`;\n    fetch(url).then(response => response.json()).then(response => {\n      setComments(response);\n    });\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  function show() {\n    if (text == \"show comments\") {\n      setArr(comments);\n      setText(\"hide comments\");\n    } else {\n      setArr([]);\n      setText(\"show comments\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" \", post.body]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: show,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 1\n    }, this), arr.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: comment.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: [comment.name, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 20\n        }, this), \" \", comment.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 1\n      }, this)]\n    }, comment.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Post, \"r0a+Dz+JQhDMQFiiCndhPuhJFu4=\", false, function () {\n  return [useParams];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["D:/מדעי המחשב/fullstuck/פרויקטים/react/part-two/src/components/Post.jsx"],"names":["React","useEffect","useState","useParams","Post","param","comments","setComments","arr","setArr","post","setPost","getPost","url","postId","fetch","then","response","json","getData","text","setText","show","body","map","comment","name","email","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,cAA1B;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACZ,MAAIC,KAAK,GAACF,SAAS,EAAnB;AACA,MAAI,CAACG,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAtC;AACA,MAAI,CAACM,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAAC,EAAD,CAA5B;AACA,MAAI,CAACQ,IAAD,EAAMC,OAAN,IAAeT,QAAQ,CAAC,EAAD,CAA3B;;AACA,WAASU,OAAT,GAAkB;AACd,QAAIC,GAAG,GAAI,iDAAgDR,KAAK,CAACS,MAAO,EAAxE;AACAC,IAAAA,KAAK,CAACF,GAAD,CAAL,CACKG,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUC,QAAQ,IAAI;AACdN,MAAAA,OAAO,CAACM,QAAD,CAAP;AACH,KAJL;AAKH;;AACDhB,EAAAA,SAAS,CAAC,MAAI;AAACkB,IAAAA,OAAO;AAAG,GAAhB,EAAiB,EAAjB,CAAT;AACA,MAAI,CAACC,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,eAAD,CAA9B;;AACA,WAASiB,OAAT,GACA;AACI,QAAIN,GAAG,GAAI,wDAAuDR,KAAK,CAACS,MAAO,EAA/E;AACAC,IAAAA,KAAK,CAACF,GAAD,CAAL,CACKG,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUC,QAAQ,IAAI;AACdV,MAAAA,WAAW,CAACU,QAAD,CAAX;AACH,KAJL;AAKC;;AACLhB,EAAAA,SAAS,CAAC,MAAI;AAACkB,IAAAA,OAAO;AAAG,GAAhB,EAAiB,EAAjB,CAAT;;AACA,WAASG,IAAT,GAAe;AACX,QAAGF,IAAI,IAAE,eAAT,EAAyB;AACrBX,MAAAA,MAAM,CAACH,QAAD,CAAN;AACAe,MAAAA,OAAO,CAAC,eAAD,CAAP;AACH,KAHD,MAII;AACAZ,MAAAA,MAAM,CAAC,EAAD,CAAN;AACAY,MAAAA,OAAO,CAAC,eAAD,CAAP;AACH;AACJ;;AACD,sBACI;AAAA,4BACI;AAAA,sBAAMX,IAAI,CAACa,IAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAER;AAAQ,MAAA,OAAO,EAAED,IAAjB;AAAA,gBAAwBF;AAAxB;AAAA;AAAA;AAAA;AAAA,YAFQ,EAIJZ,GAAG,CAACgB,GAAJ,CAASC,OAAD,iBACJ;AAAA,8BACJ;AAAA,kBAAMA,OAAO,CAACF;AAAd;AAAA;AAAA;AAAA;AAAA,cADI,eAER;AAAA,mBAAKE,OAAO,CAACC,IAAb,oBAAmB;AAAA;AAAA;AAAA;AAAA,gBAAnB,OAA0BD,OAAO,CAACE,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,cAFQ;AAAA,OAAUF,OAAO,CAACG,EAAlB;AAAA;AAAA;AAAA;AAAA,YADJ,CAJI;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GAhDQxB,I;UACKD,S;;;KADLC,I;AAiDT,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\n\r\nfunction Post() {\r\n    let param=useParams();\r\n    let [comments, setComments] = useState([]);\r\n    let [arr, setArr] = useState([]);\r\n    let [post,setPost]=useState({});\r\n    function getPost(){\r\n        let url = `https://jsonplaceholder.typicode.com/posts?id=${param.postId}`;\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                setPost(response);\r\n            })\r\n    }\r\n    useEffect(()=>{getData()},[])\r\n    let [text, setText] = useState(\"show comments\");\r\n    function getData()\r\n    {\r\n        let url = `https://jsonplaceholder.typicode.com/comments?postId=${param.postId}`;\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                setComments(response);\r\n            })\r\n        }\r\n    useEffect(()=>{getData()},[])\r\n    function show(){\r\n        if(text==\"show comments\"){\r\n            setArr(comments);\r\n            setText(\"hide comments\")    \r\n        }\r\n        else{\r\n            setArr([])\r\n            setText(\"show comments\")    \r\n        }     \r\n    }  \r\n    return (\r\n        <div>\r\n            <h2> {post.body}</h2>\r\n<button onClick={show}>{text}</button>\r\n{\r\n    arr.map((comment)=>(\r\n        <div key={comment.id}>\r\n    <h3 >{comment.body}</h3>\r\n<h5>{comment.name} <br/> {comment.email}</h5>\r\n    </div>\r\n))}\r\n    </div>\r\n    );\r\n}\r\nexport default Post;"]},"metadata":{},"sourceType":"module"}